#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os

ACCOUNT = "raphaelmichel95.gmail.com"
MDIR = os.path.expanduser("~/backup/gmail/")
FILE = "%s.maildir.sqlite.db" % ACCOUNT

import sqlite3
import email.parser
import email.utils
import time
import sys
import json
	
class ScanMailDir:
	def parsemail(self, f):
		fp = open(f)
		p = email.parser.Parser()
		r = p.parse(fp)
		fp.close()
		d = email.utils.parsedate(r.get("Date"))
		msgid = r.get("Message-ID")
		if d is not None and r.get("X-Autoreply") != "yes":
			self.c.execute("INSERT INTO mails (msgid, msg_to, msg_from, contenttype, msg_time, replyto, filesize) VALUES (?,?,?,?,?,?,?)",
				(
					msgid,
					email.utils.parseaddr(r.get("To"))[1],
					email.utils.parseaddr(r.get("From"))[1],
					r.get("Content-Type", ""),
					time.mktime(d),
					r.get("In-Reply-To", ""),
					os.path.getsize(f)
				))
			if self.i % 10 == 0:
				sys.stdout.write("\r%05d mails scanned" % self.i)
				sys.stdout.flush()
				self.conn.commit()
			self.i += 1
		
	def scan(self):		
		for f in os.listdir(self.MDIR+'cur'):
			self.parsemail(self.MDIR+'cur/'+f)
			
		for f in os.listdir(self.MDIR+'new'):
			self.parsemail(self.MDIR+'new/'+f)
		
		print "\rScanned.                          "
		self.conn.commit()
		self.c.close()
			
			
	def __init__(self, MDIR, FILE):
		self.MDIR = MDIR
		self.i = 0
		print "Scanning maildir",
		if os.path.exists(FILE):
			self.conn = sqlite3.connect(FILE)
			self.c = self.conn.cursor()
		else:
			self.conn = sqlite3.connect(FILE)
			self.c = self.conn.cursor()
			self.c.execute('''CREATE TABLE mails (msgid text unique on conflict ignore, msg_to text, msg_from text, contenttype text, msg_time real, replyto text, filesize real)''')
		self.conn.text_factory = str
s = ScanMailDir(MDIR, FILE)
s.scan()
